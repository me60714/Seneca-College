Name: Wei-Chih Kao
ID: 158000190
Email: wkao3@myseneca.ca
Section: ZAA

1. Mapping the month integer value to the first three characters of the month name could have been accomplished using one of two possible selection constructs. What are they, and provide a short example of how each would be written in C to display the first two months?

	"Multiple Selection" and "Case-by-Case".
	
	Multiple Selection ->

	    if (month == 1){
	        printf("Jan");
	    }else if (month == 2){
	        printf("Feb");
	    }

	Case-by-Case ->

	    switch (month){

	    case 1:
	        printf("Jan");
	        break;

	    case 2:
	        printf("Feb");
	        break;
	    }


2. The logic applied to validate the values entered by the user required iteration. What are the 3 types of iteration constructs? What one did you use for the validation routines, and briefly explain why?

	3 types of iteration constructs: "while", "do while", and "for".

	In the first half of workshop#3 part2, I used "do while" to set the date. That is because, before the test condition, I need to execute them one time first. To be more specific, before judging the data that the user inputs are true or false, I want to output a message that told the user to input data.

	However, in the second half of workshop#3 part2, I want the date can be increased automatically after each loop and stop in a specific value. That is to say, I have an initialization of data, I need to set a condition, and I want the data can be changed. So I used "for" to do so.

	Moreover, inside the second half part of part2 workshop#3, I need to record the data of the user's rating of the day. As well as the first half, I need to execute it one time first to tell the user to input the data before the test condition.



3. Describe what you did to test and debug your program. How did you go about finding where the problems were located?

	If the program can not run or run in an unexpected result, the first thing I did is to confirm which type of error it is, syntactic or semantic. If there are bugs about syntactic, the compiler will mark the code which seems wrong. So I can check the code and fix it right. If there are bugs about semantic errors, I will examine my pseudocode, and see if the logic is right or wrong. Also, I can use a walkthrough table to check either syntactic errors or semantic errors. Via writing down the result of every move of the code step by step then I can find out where the problem in the code is.